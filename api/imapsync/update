#!/usr/bin/perl
#
#
# Copyright (C) 2020 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use esmith::ConfigDB;
use esmith::event;
use JSON;
use NethServer::ApiTools;
use File::Copy qw/ copy /;

my $ret;
my $db = esmith::ConfigDB->open('imapsync');
my $input = NethServer::ApiTools::readInput();
my $cmd = $input->{'action'};

if ($cmd eq 'update') {

    foreach (qw (
        hostname
        username
        DeleteDestination
        Port
        Security
    )) {
        $db->set_prop($input->{'name'}, $_, $input->{$_}, type => 'imapsync');
    }

    umask 077;
    my ($login,$pass,$uid,$gid) = getpwnam('vmail');

    # copy vmail password in readable place for vmail
    my $source = '/var/lib/nethserver/secrets/vmail';
    my $destination = '/var/lib/nethserver/imapsync/secrets/vmail';
    copy ($source,$destination);

    # copy remote password in readable place for vmail
    open(SH, '>', "/var/lib/nethserver/imapsync/secrets/$input->{'name'}");
    print SH $input->{'password'};
    close SH;
    chown $uid, $gid, glob("/var/lib/nethserver/imapsync/secrets/*");

    # Find the correct security policy
    my $crypt;
    if ($input->{Security} eq 'tls') {
        $crypt = '--tls1';
    } elsif ($input->{Security} eq 'ssl') {
        $crypt = '--ssl1';
    } else {
        $crypt = '';
    }
    # Find if I delete folder in the destination
    my $delete2 = ($DeleteDestination eq 'enabled') ? '--delete2 --delete2folders':'';

    # write the Env file for systemd
    my $vars = qq(
    LOCALUSER=$input->{'name'}
    REMOTEHOSTNAME=$input->{'hostname'}
    REMOTEPORT=$input->{'Port'}
    SECURITY=$crypt
    DELETE=$delete2
    REMOTEUSERNAME=$input->{'username'});

    open(FH, '>', "/var/lib/nethserver/imapsync/$input->{'name'}");
    print FH $vars;
    close FH;
    chown $uid, $gid, glob("/var/lib/nethserver/imapsync/*");

    # start the service
    system ("/usr/bin/systemctl  restart  imapsync\@$input->{'name'}");
 
    # Wait and verify the service is up
    sleep 2;
    my $errors = `/usr/bin/systemctl is-active imapsync\@$input->{'name'}`;
    if ($?) {
        NethServer::ApiTools::error("EventError", "Service_start_failed", 1559997785);
    } else {
        NethServer::ApiTools::success();
    }

} elsif ($cmd eq 'delete') {
    my $record = $db->get($input->{'name'});
    $record->delete();
    unlink  "/var/lib/nethserver/imapsync/secrets/$input->{'name'}";
    unlink  "/var/lib/nethserver/imapsync/$input->{'name'}";
} elsif ($cmd eq 'stop') {
    # stop the service
    system ("/usr/bin/systemctl stop imapsync\@$input->{'name'}");
} else {
    error();
}

 if ($? == 0) {
     NethServer::ApiTools::success();
 } else {
     NethServer::ApiTools::error("EventError", "update_action_failed", 1559997785);
 }

 print encode_json($ret);
