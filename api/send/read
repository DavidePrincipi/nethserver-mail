#!/usr/bin/perl

#
# Copyright (C) 2019 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use esmith::ConfigDB;
use JSON;

require '/usr/libexec/nethserver/api/lib/helper_functions.pl';


my $input = readInput();
my $cmd = $input->{'action'};

my $ret = {};

if ($cmd eq 'list') {
    my @smarthosts;
    my $db = esmith::ConfigDB->open_ro('smarthosts');
    foreach ($db->get_all()) {
        my %props = $_->props;
        my $obj = {'name' => $_->key, 'type' => $props{'type'}};
        delete($props{'type'});
        foreach my $k (keys %props) {
            $obj->{'props'}{$k} = $props{$k};
        }
        if ($_->key =~ m/^@/) {
            $obj->{'SenderType'} = 'domain';
        } else {
            $obj->{'SenderType'} = 'mail';
        }
        push(@smarthosts, $obj);
    }

    $ret->{'smarthosts'} = \@smarthosts;
} elsif ($cmd eq 'configuration') {
    my $cdb = esmith::ConfigDB->open_ro();

    for (qw(SenderValidation HeloHost)) {
        $ret->{$_} = $cdb->get_prop('postfix', $_);
    }

    my $policy = $cdb->get_prop('postfix','AccessPolicies');
    if (index($policy,'trustednetworks') >= 0) {
        $ret->{'AccessPoliciesTrustednetworks'} = 'enabled';
    } else {
        $ret->{'AccessPoliciesTrustednetworks'} = 'disabled';
    }
    if (index($policy,'smtpauth') >= 0) {
        $ret->{'AccessPoliciesSmtpauth'} = 'enabled';
    } else {
        $ret->{'AccessPoliciesSmtpauth'} = 'disabled';
    }

    $ret->{'AccessBypassList'} = [split(/,/, $cdb->get_prop('postfix','AccessBypassList'))];
} elsif ($cmd eq 'check-credentials') {

    my $url = "smtp://";
    my $command = "curl --connect-timeout 3 -k -Ss --mail-rcpt 'root' -T /dev/null ";
    if ($input->{'TlsStatus'} eq 'enabled') {
        $command .= " --ssl ";
    }

    if ($input->{'Username'} && $input->{'Password'}) {
        $command .= "-u \"".$input->{'Username'}.":".$input->{'Password'}."\"";
    }

    $url .= $input->{'Host'}.":".$input->{'Port'};

    my $out = `$command $url 2>&1`;
    if ($? > 0) {
        chomp $out;
        $out =~ s/curl: \(\d+\)\s+//;
        error("GenericError",$out);
    } else {
        success();
    }
} else {
    error();
}

print encode_json($ret);
