#
# SmartHost policy
#
{
    use esmith::ConfigDB;
    my $db = esmith::ConfigDB->open_ro('smarthosts');

    my $SmartHostName = $postfix{'SmartHostName'} || '';
    my $SmartHostPort = $postfix{'SmartHostPort'} || '';
    my $SmartHostTlsStatus = $postfix{'SmartHostTlsStatus'} || '';
    my $SmartHostStatus = $postfix{'SmartHostStatus'} || 'disabled';

    my %hash = ();

    if ($SmartHostName && $SmartHostPort && $SmartHostTlsStatus && $SmartHostStatus eq 'enabled') {
      $SmartHostTlsStatus = ($SmartHostTlsStatus eq 'enabled') ? "[$SmartHostName]:$SmartHostPort\t\tencrypt" : "[$SmartHostName]:$SmartHostPort\t\tmay";
      $hash{$SmartHostTlsStatus} = 1;
    }

    foreach ($db->get_all_by_prop('status' => 'enabled')) {
        my $host = $_->prop('Host') || next;
        my $port = $_->prop('Port')|| next;
        my $k = ($_->prop('TlsStatus') eq 'enabled') ? "[$host]:$port\t\tencrypt" : "[$host]:$port\t\tmay";
        my $k_encrypt = "[$host]:$port\t\tencrypt";

        # replace duplicates: 'may' will replace 'encrypt'
        if ($k =~ m/may$/ && $hash{$k_encrypt}) {
            delete($hash{$k_encrypt});
        }
        $hash{$k} = 1;
    }

    foreach my $k (keys %hash) {
        $OUT .= "$k\n";
    }
}
